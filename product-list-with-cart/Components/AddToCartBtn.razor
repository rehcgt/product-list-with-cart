@implements IDisposable

<MudElement HtmlTag="div" onmouseenter="@showCountBtn" onmouseleave="@HideCountBtn" Style="z-index: 10; margin-top: -20px; text-align: center;">
    @if (showCount)
    {
        <MudButton Variant="Variant.Filled" Class="rounded-xl" Style="@($"background-color:{Colors.Red.Default}; color:{Colors.Gray.Lighten5}; width: 152px;")">
            <MudElement HtmlTag="div" Style="display: flex; justify-content: space-between; align-items: center; width: 100%;">
                <MudIconButton Icon="@Icons.Material.Filled.Remove" Size="Size.Small" Style="@($"color:{Colors.Gray.Lighten5};")" @onclick="RemoveFromCart" />
                <MudElement HtmlTag="span" Style="text-transform:none; font-weight:bold;">@count</MudElement>
                <MudIconButton Icon="@Icons.Material.Filled.Add" Size="Size.Small" Style="@($"color:{Colors.Gray.Lighten5};")" @onclick="AddToCart" />
            </MudElement>
        </MudButton>
    }
    else
    {
        <MudButton Variant="Variant.Filled" Class="rounded-xl" Style="@($"background-color:{Colors.Gray.Lighten5}; color:{Colors.Red.Default}; width: 152px;")">
            <MudElement HtmlTag="img" Src="/images/icon-add-to-cart.svg" Alt="Cart Icon" />
            <MudElement HtmlTag="span" Style="text-transform:none; font-weight:bold; margin-left:1em;">Add to Cart</MudElement>
        </MudButton>
    }
</MudElement>

@code {
    private bool showCount = false;
    private int count = 0;
    [Parameter]
    public Product p { get; set; }

    [Inject]
    public CartStateService CartService { get; set; }

    protected override void OnInitialized()
    {
        CartService.OnChange += UpdateCount;
        UpdateCount();
    }

    public void Dispose()
    {
        CartService.OnChange -= UpdateCount;
    }

    private void UpdateCount()
    {
        count = CartService.getItemCount(p.Id);
        StateHasChanged();
    }

    private void AddToCart()
    {
        count++;
        if (count == 1)
        {
            CartService.AddItem(new CartItem
                {
                    Id = p.Id,
                    ProductName = p.Name,
                    Quantity = 1,
                    UnitPrice = p.Price,
                    Thumbnail = p.Image.Thumbnail
                });
        }
        else
        {
            CartService.IncrementQuantity(p.Id);
        }
    }

    private void RemoveFromCart()
    {
        if (count > 0)
        {
            count--;
            CartService.DecrementQuantity(p.Id);
        }
    }

    void showCountBtn()
    {
        showCount = true;
    }

    void HideCountBtn()
    {
        showCount = false;
    }
}